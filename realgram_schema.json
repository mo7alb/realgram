{
  "openapi": "3.0.2",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/api/profile/{id}/": {
      "get": {
        "operationId": "retrieveProfile",
        "description": "retrieve profile data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateProfile",
        "description": "update profile data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateProfile",
        "description": "viewset to retrieve a user profile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this profile.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/posts/": {
      "get": {
        "operationId": "listPosts",
        "description": "Send a list of posts to the client",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "createPost",
        "description": "Allow clients to create a new post",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/posts/{id}/": {
      "get": {
        "operationId": "retrievePost",
        "description": "Viewset to create, retrieve, update, delete and to get a list of posts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this post.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updatePost",
        "description": "update a post in the db",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this post.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdatePost",
        "description": "Viewset to create, retrieve, update, delete and to get a list of posts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this post.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyPost",
        "description": "Viewset to create, retrieve, update, delete and to get a list of posts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this post.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/comments/{id}/": {
      "get": {
        "operationId": "retrieveComment",
        "description": "retrieve list of comments related to a post \n\nthe primary key passed is used as the primary key of the post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this comment.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "updateComment",
        "description": "viewset to create, update, retrieve and destroy comments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this comment.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "patch": {
        "operationId": "partialUpdateComment",
        "description": "viewset to create, update, retrieve and destroy comments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this comment.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyComment",
        "description": "viewset to create, update, retrieve and destroy comments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this comment.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/message/room/{slug}/": {
      "get": {
        "operationId": "retrieveRoom",
        "description": "retrieve chat room",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "A unique value identifying this room.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/message/{id}/": {
      "get": {
        "operationId": "retrieveMessage",
        "description": "retrieve chat room",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this message.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/follow/{id}/": {
      "get": {
        "operationId": "retrieveFollow",
        "description": "returns a list of profiles followed by a profile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this follow.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowList"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      },
      "delete": {
        "operationId": "destroyFollow",
        "description": "Viewset to create, retrieve a list of and to destroy follows",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this follow.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/profile/register/": {
      "post": {
        "operationId": "registerProfile",
        "description": "allows new users to register",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/profile/authenticate/": {
      "post": {
        "operationId": "authenticateProfile",
        "description": "returns a token which is to be used in the header \n\nexample \nlogin returns token 123\n\nrequesting another api url, include token 123 inside the header as below\nAuthorization Token 123",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/profile/logout/": {
      "post": {
        "operationId": "logoutProfile",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/comments/": {
      "post": {
        "operationId": "createComment",
        "description": "create a new comment",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/message/room/": {
      "post": {
        "operationId": "createRoom",
        "description": "create a new room",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/follow/": {
      "post": {
        "operationId": "createFollow",
        "description": "create a new follow",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FollowList"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FollowList"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FollowList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowList"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "maxLength": 254
              },
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "pattern": "^[\\w.@+-]+\\z",
                "maxLength": 150
              },
              "first_name": {
                "type": "string",
                "maxLength": 150
              },
              "last_name": {
                "type": "string",
                "maxLength": 150
              }
            },
            "required": [
              "username"
            ]
          },
          "bio": {
            "type": "string",
            "nullable": true,
            "maxLength": 256
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true
          }
        },
        "required": [
          "user"
        ]
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "profile": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "caption": {
            "type": "string",
            "nullable": true,
            "maxLength": 300
          },
          "body": {
            "type": "string",
            "nullable": true,
            "maxLength": 700
          },
          "img": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date",
            "readOnly": true
          }
        },
        "required": [
          "profile",
          "title"
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "maxLength": 200
          },
          "profile": {
            "type": "object",
            "properties": {
              "pk": {
                "type": "integer",
                "readOnly": true
              }
            }
          }
        },
        "required": [
          "message",
          "profile"
        ]
      },
      "Room": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "readOnly": true,
            "pattern": "^[-a-zA-Z0-9_]+$"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "reciever": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "sender": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "reciever",
          "sender",
          "message"
        ]
      },
      "FollowList": {
        "type": "object",
        "properties": {
          "pk": {
            "type": "integer",
            "readOnly": true
          },
          "profile": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "user": {
                "type": "object",
                "properties": {
                  "pk": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "pattern": "^[\\w.@+-]+\\z",
                    "maxLength": 150
                  }
                },
                "required": [
                  "username"
                ]
              }
            },
            "required": [
              "user"
            ]
          },
          "follows": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "user": {
                "type": "object",
                "properties": {
                  "pk": {
                    "type": "integer",
                    "readOnly": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "pattern": "^[\\w.@+-]+\\z",
                    "maxLength": 150
                  }
                },
                "required": [
                  "username"
                ]
              }
            },
            "required": [
              "user"
            ]
          }
        },
        "required": [
          "profile",
          "follows"
        ]
      }
    }
  }
}
